name: Deploy Backend to VPS

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add VPS to known_hosts
        run: |
          ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Rsync project to server (safe: no --delete)
        env:
          SSH_OPTS: "-o IdentitiesOnly=yes -o StrictHostKeyChecking=yes -p ${{ secrets.SSH_PORT }}"
        run: |
          rsync -az --exclude 'node_modules' --exclude '.env' --exclude '.git' -e "ssh $SSH_OPTS -i ~/.ssh/id_rsa" ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.REMOTE_DIR }}

      - name: Remote install, pm2 restart and healthcheck
        env:
          SSH_OPTS: "-o IdentitiesOnly=yes -o StrictHostKeyChecking=yes -p ${{ secrets.SSH_PORT }}"
        run: |
          ssh $SSH_OPTS -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            set -e
            cd ${{ secrets.REMOTE_DIR }}
            # Keep server .env intact (we excluded it). Install using lockfile when present.
            if [ -f package-lock.json ]; then
              echo "Found package-lock.json — running npm ci"
              npm ci --omit=dev
            else
              echo "No lockfile — running npm install"
              npm install --omit=dev
            fi
            # Restart or start the pm2 app
            pm2 restart ${{ secrets.PM2_APP_NAME }} --update-env || pm2 start index.js --name ${{ secrets.PM2_APP_NAME }} || pm2 start ecosystem.config.js --env production
            pm2 save
            # quick internal healthcheck
            if curl -sS http://127.0.0.1:3001/ >/dev/null 2>&1; then
              echo "LOCAL_HEALTH_OK"
              exit 0
            else
              echo "LOCAL_HEALTH_FAILED"
              exit 2
            fi
EOF
